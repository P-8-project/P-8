[runner]
# services to start
services=mongrel2,m2adapter,zurl,p-8-proxy,p-8-handler

# plain HTTP port that mongrel2 should listen on
http_port=7999

# list of HTTPS ports that mongrel2 should listen on (you must have certs set)
#https_ports=443

# directory of configs (path relative to location of this file)
configdir=runner

# directory to save pid files (path relative to location of this file)
rundir=runner/run

# directory to save log files (path relative to location of this file)
logdir=runner/log

# paths
mongrel2_bin=mongrel2
m2sh_bin=m2sh
zurl_bin=zurl


[proxy]
# list of connect PULL for receiving mongrel2 HTTP requests
m2a_in_specs=ipc:///tmp/p-8-m2a-out

# list of connect DEALER for continuing mongrel2 HTTP requests
m2a_in_stream_specs=ipc:///tmp/p-8-m2a-out-stream

# list of connect PUB for sending mongrel2 HTTP responses
m2a_out_specs=ipc:///tmp/p-8-m2a-in

# list of connect PUSH for sending zurl HTTP requests
zurl_out_specs=ipc:///tmp/p-8-zurl-in

# list of connect ROUTER for continuing zurl HTTP requests
zurl_out_stream_specs=ipc:///tmp/p-8-zurl-in-stream

# list of connect SUB for receiving zurl HTTP responses
zurl_in_specs=ipc:///tmp/p-8-zurl-out

# bind DEALER for requesting inspection info (internal, used with handler)
handler_inspect_spec=ipc:///tmp/p-8-inspect

# bind PULL for receiving retry requests (internal, used with handler)
handler_retry_in_spec=ipc:///tmp/p-8-retry

# bind PUSH for passing off requests (internal, used with handler)
handler_accept_out_spec=ipc:///tmp/p-8-accept

# routes config file (path relative to location of this file)
routesfile=routes

# whether to use automatic CORS and JSON-P wrapping
auto_cross_origin=false

# whether to assert x-forwarded-protocol
set_x_forwarded_protocol=true

# how to treat x-forwarded-for. example: "truncate:0,append"
x_forwarded_for=

# how to treat x-forwarded-for if grip-signed
x_forwarded_for_trusted=

# for signing requests proxied by p-8. use "base64:" prefix for binary key
sig_key=changeme

# use this to allow grip to be forwarded upstream (e.g. to fanout.io)
upstream_key=


[handler]
# connect REP for responding with inspection info (internal, used with proxy)
proxy_inspect_spec=ipc:///tmp/p-8-inspect

# connect PUSH for sending HTTP requests (internal, used with proxy)
proxy_retry_out_spec=ipc:///tmp/p-8-retry

# connect PULL for receiving HTTP requests (internal, used with proxy)
proxy_accept_in_spec=ipc:///tmp/p-8-accept

# list of connect PUB for sending mongrel2 HTTP responses
m2a_out_specs=ipc:///tmp/p-8-m2a-in

# redis server to use for storing state
redis_host=127.0.0.1
redis_port=6379
redis_prefix=p-8-

# bind PULL for receiving publish commands
push_in_spec=tcp://127.0.0.1:5560

# addr/port to listen on for receiving publish commands via HTTP
push_in_http_addr=127.0.0.1
push_in_http_port=5561
