{% for port in ports %}handler_{{ port.value }} = Handler(
	send_spec="ipc:///tmp/p-8-m2-out-{{ port.value }}",
	send_ident="p-8-m2-{{ port.value }}",
	recv_spec="ipc:///tmp/p-8-m2-in-{{ port.value }}",
	recv_ident="p-8-m2-{{ port.value }} " # trailing space needed
)

{% endfor %}{% for port in ports %}host_{{ port.value }} = Host(name="default", routes={ "/": handler_{{ port.value }} })

{% endfor %}{% for port in ports %}server_{{ port.value }} = Server(
	uuid="default_{{ port.value }}",{% if port.ssl %}
	use_ssl=1,{% endif %}
	access_log="{{ logdir }}/access_{{ port.value }}.log",
	error_log="{{ logdir }}/error_{{ port.value }}.log",
	pid_file="{{ rundir }}/mongrel2_{{ port.value }}.pid",
	control_port="ipc:///tmp/p-8-m2-control-{{ port.value }}",
	default_host="default",
	name="server-{{ port.value }}",
	port={{ port.value }},
	hosts=[host_{{ port.value }}]
)

{% endfor %}settings = {
	"certdir": "{{ certdir }}/",
	# we explicitly set this list to workaround an issue with Chrome on Linux
	"ssl_ciphers": "SSL_EDH_RSA_AES_256_SHA SSL_EDH_RSA_AES_128_SHA SSL_EDH_RSA_CAMELLIA_256_SHA SSL_EDH_RSA_CAMELLIA_128_SHA SSL_EDH_RSA_DES_168_SHA SSL_RSA_AES_256_SHA SSL_RSA_CAMELLIA_256_SHA SSL_RSA_AES_128_SHA SSL_RSA_CAMELLIA_128_SHA SSL_RSA_DES_168_SHA SSL_RSA_RC4_128_SHA SSL_RSA_RC4_128_MD5",
	"upload.stream": 1,
	"server.daemonize": 0,
	"no_clobber_xff": 1
}

servers = [{% for port in ports %}server_{{ port.value }}{% if not loop.last %}, {% endif %}{% endfor %}]

